name: CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    branches: [main]
    types: [opened, edited, synchronize]

permissions:
  pull-requests: read

jobs:
  common:
    name: Lint and Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false
          submodules: recursive
          token: ${{ secrets.GH_TOKEN_V2 }}

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Create custom settings.xml
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml <<EOF
          <settings>
            <localRepository>${{ github.workspace }}/external/facetec-aar/build/repo</localRepository>
          </settings>
          EOF

      - name: Build and Publish facetec-aar if needed
        run: |
          if [ ! -f external/facetec-aar/build/repo/com/azify/facetec/facetec-sdk/9.7.47/facetec-sdk-9.7.47.pom ]; then
            cd external/facetec-aar
            gradle publish --no-daemon --parallel
          else
            echo "facetec-sdk already published."
          fi

      - name: Installing dependencies and build package
        run: |
          npm set //registry.npmjs.org/:_authToken $NPM_TOKEN
          npm ci
          npm run prepack

      - name: Run example release build
        run: |
          cd example
          npm install
          cd android
          ./gradlew assembleRelease --no-daemon --parallel
