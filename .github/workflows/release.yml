name: Release
on:
  push:
    branches:
      - main
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false
          submodules: recursive
          token: ${{ secrets.GH_TOKEN_V2 }}

      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      # - name: Create custom settings.xml
      #   run: |
      #     mkdir -p ~/.m2
      #     cat > ~/.m2/settings.xml <<EOF
      #     <settings>
      #       <localRepository>${{ github.workspace }}/external/facetec-aar/build/repo</localRepository>
      #     </settings>
      #     EOF

      - name: Build and Publish facetec-aar if needed
        run: |
          if [ ! -f external/facetec-aar/build/repo/com/azify/facetec/facetec-sdk/9.7.47/facetec-sdk-9.7.47.pom ]; then
            cd external/facetec-aar
            gradle publish --no-daemon --parallel
          else
            echo "facetec-sdk already published."
          fi

      - name: Install dependencies
        run: |
          npm set //registry.npmjs.org/:_authToken $NPM_TOKEN
          npm ci

      - name: Run build
        run: npm run prepack

      - name: Run example release build
        run: |
          cd example
          npm install
          cd android
          ./gradlew assembleRelease --no-daemon --parallel

      # - name: Publish Release
      #   run: npm run release
