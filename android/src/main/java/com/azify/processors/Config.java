package com.azify.processors;

import android.content.Context;

import com.facebook.react.bridge.ReadableMap;
import com.facetec.sdk.*;
import com.azify.processors.helpers.ThemeUtils;
import com.azify.azifacemobilesdk.R;

import java.util.HashMap;
import java.util.Map;

import okhttp3.Headers;
import okhttp3.Request;

public class Config {
  private static final ThemeUtils AziThemeUtils = new ThemeUtils();
  public static String DeviceKeyIdentifier;
  public static String BaseURL;
  public static String ProcessId;
  public static String PublicFaceScanEncryptionKey;
  public static String ProductionKeyText;
  public static Map<String, String> ProcessorPathURL = new HashMap<String, String>();
  public static ReadableMap Theme;
  public static ReadableMap RequestHeaders;

  private static Map<String, String> parseReadableMapToMap() {
    Map<String, String> headers = new HashMap<String, String>();

    if (RequestHeaders == null) {
      return headers;
    }

    for (Map.Entry<String, Object> entry : RequestHeaders.toHashMap().entrySet()) {
      String key = entry.getKey();
      Object value = entry.getValue();
      headers.put(key, value == null ? "" : value.toString());
    }
    return headers;
  }

  private static Headers parseHeadersMapToHeaders(Map<String, String> headersMap, String httpMethod) {
    okhttp3.Request.Builder buildHeader = new Request.Builder()
        .header("X-Device-Key", DeviceKeyIdentifier)
        .header("X-User-Agent", FaceTecSDK.createFaceTecAPIUserAgentString(""));

    if (!httpMethod.equalsIgnoreCase("GET")) {
      buildHeader = buildHeader.header("Content-Type", "application/json");
    }

    for (Map.Entry<String, String> entry : headersMap.entrySet()) {
      buildHeader = buildHeader.header(entry.getKey(), entry.getValue());
    }

    okhttp3.Request requestHeader = buildHeader
        .url(Config.BaseURL)
        .build();

    return requestHeader.headers();
  }

  public static Headers getHeaders(String httpMethod) {
    Map<String, String> headersMap = parseReadableMapToMap();
    okhttp3.Headers headers = parseHeadersMapToHeaders(headersMap, httpMethod.toUpperCase());
    return headers;
  }

  public static void setTheme(ReadableMap theme) {
    Theme = theme;
  }

  public static void setDevice(String device) {
    DeviceKeyIdentifier = device;
  }

  public static void setUrl(String url) {
    BaseURL = url;
  }

  public static void setProcessId(String id) {
    ProcessId = id;
  }

  public static void setKey(String key) {
    PublicFaceScanEncryptionKey = key;
  }

  public static void setProductionKeyText(String keyText) {
    ProductionKeyText = keyText;
  }

  public static void setProcessorPathURL(String key, String pathUrl) {
    ProcessorPathURL.put(key, pathUrl);
  }

  public static void setHeaders(ReadableMap headers) {
    RequestHeaders = headers;
  }

  public static boolean hasConfig() {
    return DeviceKeyIdentifier != null
        && BaseURL != null
        && PublicFaceScanEncryptionKey != null
        && ProductionKeyText != null;
  }

  public static void initializeFaceTecSDKFromAutogeneratedConfig(
      Context context,
      boolean isDeveloper,
      FaceTecSDK.InitializeCallback callback) {
    if (isDeveloper) {
      FaceTecSDK.initializeInDevelopmentMode(context, DeviceKeyIdentifier, PublicFaceScanEncryptionKey, callback);
    } else {
      FaceTecSDK.initializeInProductionMode(context, ProductionKeyText, DeviceKeyIdentifier,
          PublicFaceScanEncryptionKey, callback);
    }
  }

  public static FaceTecCustomization retrieveConfigurationWizardCustomization() {
    FaceTecCancelButtonCustomization.ButtonLocation cancelButtonLocation = AziThemeUtils
        .handleButtonLocation("cancelButtonLocation");

    FaceTecSecurityWatermarkImage securityWatermarkImage = FaceTecSecurityWatermarkImage.FACETEC;

    FaceTecCustomization defaultCustomization = new FaceTecCustomization();

    defaultCustomization.getFrameCustomization().cornerRadius = AziThemeUtils.handleBorderRadius("frameCornerRadius");
    defaultCustomization.getFrameCustomization().backgroundColor = AziThemeUtils.handleColor("frameBackgroundColor");
    defaultCustomization.getFrameCustomization().borderColor = AziThemeUtils.handleColor("frameBorderColor");

    defaultCustomization.getOverlayCustomization().brandingImage = AziThemeUtils.handleImage("logoImage",
        R.drawable.facetec_your_app_logo);
    defaultCustomization.getOverlayCustomization().backgroundColor = AziThemeUtils
        .handleColor("overlayBackgroundColor");

    defaultCustomization.getGuidanceCustomization().backgroundColors = AziThemeUtils.handleColor(
        "guidanceBackgroundColorsAndroid");
    defaultCustomization.getGuidanceCustomization().foregroundColor = AziThemeUtils.handleColor(
        "guidanceForegroundColor",
        "#272937");
    defaultCustomization.getGuidanceCustomization().buttonBackgroundNormalColor = AziThemeUtils.handleColor(
        "guidanceButtonBackgroundNormalColor", "#026ff4");
    defaultCustomization.getGuidanceCustomization().buttonBackgroundDisabledColor = AziThemeUtils.handleColor(
        "guidanceButtonBackgroundDisabledColor", "#b3d4fc");
    defaultCustomization.getGuidanceCustomization().buttonBackgroundHighlightColor = AziThemeUtils.handleColor(
        "guidanceButtonBackgroundHighlightColor", "#0264dc");
    defaultCustomization.getGuidanceCustomization().buttonTextNormalColor = AziThemeUtils.handleColor(
        "guidanceButtonTextNormalColor");
    defaultCustomization.getGuidanceCustomization().buttonTextDisabledColor = AziThemeUtils.handleColor(
        "guidanceButtonTextDisabledColor");
    defaultCustomization.getGuidanceCustomization().buttonTextHighlightColor = AziThemeUtils.handleColor(
        "guidanceButtonTextHighlightColor");
    defaultCustomization.getGuidanceCustomization().retryScreenImageBorderColor = AziThemeUtils.handleColor(
        "guidanceRetryScreenImageBorderColor");
    defaultCustomization.getGuidanceCustomization().retryScreenOvalStrokeColor = AziThemeUtils.handleColor(
        "guidanceRetryScreenOvalStrokeColor");

    defaultCustomization.getOvalCustomization().strokeColor = AziThemeUtils.handleColor("ovalStrokeColor", "#026ff4");
    defaultCustomization.getOvalCustomization().progressColor1 = AziThemeUtils.handleColor("ovalFirstProgressColor",
        "#0264dc");
    defaultCustomization.getOvalCustomization().progressColor2 = AziThemeUtils.handleColor("ovalSecondProgressColor",
        "#0264dc");

    defaultCustomization.getFeedbackCustomization().backgroundColors = AziThemeUtils.handleColor(
        "feedbackBackgroundColorsAndroid",
        "#026ff4");
    defaultCustomization.getFeedbackCustomization().textColor = AziThemeUtils.handleColor("feedbackTextColor");

    defaultCustomization.getCancelButtonCustomization().customImage = AziThemeUtils.handleImage("cancelImage",
        R.drawable.facetec_cancel);
    defaultCustomization.getCancelButtonCustomization().setLocation(cancelButtonLocation);

    defaultCustomization.getResultScreenCustomization().backgroundColors = AziThemeUtils.handleColor(
        "resultScreenBackgroundColorsAndroid");
    defaultCustomization.getResultScreenCustomization().foregroundColor = AziThemeUtils.handleColor(
        "resultScreenForegroundColor",
        "#272937");
    defaultCustomization.getResultScreenCustomization().activityIndicatorColor = AziThemeUtils.handleColor(
        "resultScreenActivityIndicatorColor", "#026ff4");
    defaultCustomization.getResultScreenCustomization().resultAnimationBackgroundColor = AziThemeUtils.handleColor(
        "resultScreenResultAnimationBackgroundColor", "#026ff4");
    defaultCustomization.getResultScreenCustomization().resultAnimationForegroundColor = AziThemeUtils.handleColor(
        "resultScreenResultAnimationForegroundColor");
    defaultCustomization.getResultScreenCustomization().uploadProgressFillColor = AziThemeUtils.handleColor(
        "resultScreenUploadProgressFillColor", "#026ff4");

    defaultCustomization.securityWatermarkImage = securityWatermarkImage;

    defaultCustomization.getIdScanCustomization().selectionScreenBackgroundColors = AziThemeUtils.handleColor(
        "idScanSelectionScreenBackgroundColorsAndroid");
    defaultCustomization.getIdScanCustomization().selectionScreenForegroundColor = AziThemeUtils.handleColor(
        "idScanSelectionScreenForegroundColor", "#272937");
    defaultCustomization.getIdScanCustomization().reviewScreenForegroundColor = AziThemeUtils.handleColor(
        "idScanReviewScreenForegroundColor");
    defaultCustomization.getIdScanCustomization().reviewScreenTextBackgroundColor = AziThemeUtils.handleColor(
        "idScanReviewScreenTextBackgroundColor", "#026ff4");
    defaultCustomization.getIdScanCustomization().captureScreenForegroundColor = AziThemeUtils.handleColor(
        "idScanCaptureScreenForegroundColor");
    defaultCustomization.getIdScanCustomization().captureScreenTextBackgroundColor = AziThemeUtils.handleColor(
        "idScanCaptureScreenTextBackgroundColor", "#026ff4");
    defaultCustomization.getIdScanCustomization().buttonBackgroundNormalColor = AziThemeUtils.handleColor(
        "idScanButtonBackgroundNormalColor", "#026ff4");
    defaultCustomization.getIdScanCustomization().buttonBackgroundDisabledColor = AziThemeUtils.handleColor(
        "idScanButtonBackgroundDisabledColor", "#b3d4fc");
    defaultCustomization.getIdScanCustomization().buttonBackgroundHighlightColor = AziThemeUtils.handleColor(
        "idScanButtonBackgroundHighlightColor", "#0264dc");
    defaultCustomization.getIdScanCustomization().buttonTextNormalColor = AziThemeUtils.handleColor(
        "idScanButtonTextNormalColor");
    defaultCustomization.getIdScanCustomization().buttonTextDisabledColor = AziThemeUtils.handleColor(
        "idScanButtonTextDisabledColor");
    defaultCustomization.getIdScanCustomization().buttonTextHighlightColor = AziThemeUtils.handleColor(
        "idScanButtonTextHighlightColor");
    defaultCustomization.getIdScanCustomization().captureScreenBackgroundColor = AziThemeUtils.handleColor(
        "idScanCaptureScreenBackgroundColor");
    defaultCustomization.getIdScanCustomization().captureFrameStrokeColor = AziThemeUtils.handleColor(
        "idScanCaptureFrameStrokeColor");

    return defaultCustomization;
  }

  public static FaceTecCustomization retrieveLowLightConfigurationWizardCustomization() {
    return retrieveConfigurationWizardCustomization();
  }

  public static FaceTecCustomization retrieveDynamicDimmingConfigurationWizardCustomization() {
    return retrieveConfigurationWizardCustomization();
  }

  public static FaceTecCustomization currentCustomization = retrieveConfigurationWizardCustomization();
  public static FaceTecCustomization currentLowLightCustomization = retrieveLowLightConfigurationWizardCustomization();
  public static FaceTecCustomization currentDynamicDimmingCustomization = retrieveDynamicDimmingConfigurationWizardCustomization();
}
